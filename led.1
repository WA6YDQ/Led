.TH LED 1 2020-06-20
.SH NAME
led \-
A simple line editor designed for cross-platform
operating systems where a consistant design and UI is wanted.
.SH SYNOPSIS
.B led [filename] 
where filename is a text file to open on start. If a filename is given
led will load the file into the buffer.
If no filename is given led will start with an empty buffer.
.PP
In either case led will start in append mode. You will see a A>
prompt at startup.
.SH DESCRIPTION
To build led using an ansi-c compiler:
cc -o led led.c -Wall
.PP
led is written and initially build on a linux system but has been 
successfully built on other systems as well.
.SH MODES
led has 3 operating modes: 
.PP
.B APPEND
In append mode anything typed will be added to the end of the buffer.
When the led program is started, you will be in the append mode. The
displayed prompt will show A> to indicate that you are in the append mode.
.PP
.B INSERT 
To get to the insert mode type ins [line number].
You can only enter insert mode after some text has been entered in
the buffer. The prompt will show I> when in insert mode.
.PP
.B COMMAND
Command mode is where you run various commands that manipulate the
buffer. The prompt will show CMD> when in command mode.
.PP
To switch between append and command mode press CTRL-B and the 
enter/return key at the start of a new line. 
.PP
To exit insert mode and return to command mode press CTRL-B and the 
enter/return key, again at the start of a new line.
.PP
.B NOTE:
.PP
Switching commands (pressing CTRL-B and enter/return) only works when the
cursor is on the start of a new line.
.SH COMMANDS
.TP
.B new
The new command clears the buffer and resets the buffer pointer to 0.
Everything that was in the buffer will be erased. The contents of the
cut buffer (used in cut/copy/paste) is unchanged.
.TP
.B load [filename]
The load command will load a text file at the current position within 
the buffer. If the buffer is empty, the loaded file will be the only 
data in the buffer. If the buffer already had data in it the loaded file
will be appended to the end of the buffer.
If no filename is given you will be asked for one. If the file does not
exist an error message will be displayed and you will be returned to command
mode.
.TP
.B save [filename]
The save command will save the contents of the buffer to the given filename.
If a filename is not given you will be asked to supply one. If a file can't 
be created an error message will be shown and you will be returned to the 
command mode.
.TP
.B print [start linenumber] [end linenumber] 
The print command will display the contents of the buffer preceeded
by an internal line number. The line number is not a part of the buffer but
is supplied for reference to help you manipulate the buffer contents.
.BR
If no linenumber is supplied the buffer will be displayed from the beginning.
If start/end line numbers are given, the buffer will be displayed from start
to end (inclusive). If just the start line number is given, the text buffer
will be displayed from the start number to the buffer end.
.TP
.B NOTE: 
Line numbers are equivalant to newlines. The text buffer starts at
buffer location 0 which corrosponds to line 1. Each newline will increment the
linenumber count by one.
.BR
The print/list commands will show 24 lines at a time. At the 24th line
-- MORE -- will be displayed and wait for you to press either enter/return
to show the next set of lines, or press 'q' and enter/return to return to command
mode.
.TP
.B del [linenumber]
The del command will delete a single line using the given linenumber.
.TP
.B ins [linenumber]
The ins command will start inserting text at the start of the given linenumber.
Inserting will continue until a CTRL-B and enter/return is pressed at the start
of a new line.
.TP
.B cut [linenumber]
The cut command deletes linenumber from the main buffers, saving it in a 
special cut buffer for later use.
.TP
.B copy [linenumber]
The copy command copies linenumber from the main buffer, saving it in 
a special cut buffer for later use.
.TP
.B paste [linenumber]
The paste command pastes the cut buffer before linenumber. The cut buffer is
unchanged so that a paste can occur multiple times throughout the document.
.TP
.B stats
The stats command displays the size of the buffer and line number count.
Also the contents of the cut buffer (used in cut/copy/paste) are shown.
.TP
.B find [string]
The find command searches the buffer for the specified string. There can
be up to 1000 characters in the search string, but the search string ends at
the first white space. A single character can also be searched for.
The output of the find command will be the line number the string resides on
and the entire line will be displayed.
.TP
.B sort
The sort command does an alphabetic sort of the buffer replacing the current 
buffer contents with the sorted result.
.TP
.B replace [starting line number] [old string] [new string] 
.TP
.B replaceall [starting line number] [old string] [new string]
The replace command searches the buffer from the provided line number for the 
first instance of 'string' and replaces it with 'new string'. 
The replaceall command searches the entire document starting at the provided 
line number for 'old string' and replaces it with 'new string'. In both 
cases 'old string' and 'new string' can have no white spaces, and must be 
non-NULL. 'old string' can be part of an existing string but ends with either 
a newline ('\\n') or space (' ');
.TP
.B undo
The undo command un-does the last buffer-changing operation. Use this when
the command has done something horrible to your buffer. 
Example: you type 
.B new 
then realize you didn't save your work.
The undo command will restore your buffer to how it was before you typed 
.B new.
The undo command does not work with commands that do not modify the buffer (print/list)
but works wonderfully with new, replaceall, etc.
.TP
.B quit
The quit command exits the line editor immediately. Any unsaved buffer contents
will be lost without warning. If you want to save the buffer, run save [filename]
before quitting.
.SH
.B AUTHOR
led is written by Kurt Theis.
.SH
.B BUGS
Please report bugs to the github page where this is hosted.
.SH
.B NOTES
The source is pure ansi and should compile cleanly. Converting to K&R is mostly
doable but some versions may give you trouble.
